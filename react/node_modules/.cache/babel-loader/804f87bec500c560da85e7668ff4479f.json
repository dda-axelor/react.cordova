{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\or\\\\Desktop\\\\maot_hahahim\\\\code\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\or\\\\Desktop\\\\maot_hahahim\\\\code\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\or\\\\Desktop\\\\maot_hahahim\\\\code\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\or\\\\Desktop\\\\maot_hahahim\\\\code\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\or\\\\Desktop\\\\maot_hahahim\\\\code\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\or\\\\Desktop\\\\maot_hahahim\\\\code\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\or\\\\Desktop\\\\maot_hahahim\\\\code\\\\src\\\\alertNotifiction.js\";\nimport React from 'react';\nimport $ from 'jquery';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\n\nvar Swel =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Swel, _React$Component);\n\n  function Swel(props) {\n    var _this;\n\n    _classCallCheck(this, Swel);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Swel).call(this, props));\n    _this.name = \"swal\";\n    _this.myApp = _this.props.myApp;\n    var new_myChildrens = _this.myApp.state.myChildrens;\n    new_myChildrens[\"swal\"] = _assertThisInitialized(_assertThisInitialized(_this));\n\n    _this.myApp.setState({\n      myChildrens: new_myChildrens\n    });\n\n    _this.state = {\n      //showSwal: true,\n      whenCloseApp: false\n    };\n    _this.MySwal = withReactContent(Swal);\n    return _this;\n  }\n\n  _createClass(Swel, [{\n    key: \"runSwal\",\n    value: function runSwal(whenCloseApp) {\n      var _this2 = this;\n\n      //  this.setState({whenCloseApp:!whenCloseApp})\n      var fthis = this;\n      var result = this.state.result;\n      this.MySwal.fire({\n        html: result.html,\n        title: result.title,\n        text: result.text,\n        type: result.type,\n        showCancelButton: result.showCancelButton && !whenCloseApp,\n        showConfirmButton: result.showConfirmButton,\n        showCloseButton: result.showCloseButton,\n        confirmButtonText: result.confirmButtonText,\n        cancelButtonText: result.cancelButtonText,\n        confirmButtonColor: result.confirmButtonColor !== undefined ? result.confirmButtonColor : '#31b1ca',\n        cancelButtonColor: result.cancelButtonColor !== undefined ? result.cancelButtonColor : '#aaa',\n        footer: !whenCloseApp && result.showFooterRemindMeLater ? React.createElement(\"div\", {\n          onClick: function onClick() {\n            fthis.myApp.setState({\n              showSwalLater: true\n            });\n\n            _this2.MySwal.clickCancel();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, result.textFooterRemindMeLater !== undefined ? result.textFooterRemindMeLater : 'הזכר לי מאוחר יותר') : \"\",\n        padding: result.padding,\n        background: result.background,\n        show: this.state.showSwal //, footer: 'Copyright 2018'\n        ,\n        onOpen: function onOpen() {// `MySwal` is a subclass of `Swal`\n          //   with all the same instance & static methods\n          // MySwal.clickConfirm()\n        }\n      }).then(function (click) {\n        if (click.dismiss !== \"cancel\") {\n          window.open(result.linkOnClickConfirmButtom);\n        }\n\n        if (whenCloseApp) {\n          window.navigator.app.exitApp();\n        }\n\n        if (result.important) return fthis.runSwal();\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var fthis = this;\n\n      if (true) {\n        this.setState({\n          result: {\n            //אף שדה הוא לא שדה חובה (לכולם יש ברירת מחדל)\n            important: false //קובע אם המשתמש יוכל לדלג ולהמשך או באפליקציה או שיהיה חייב לעדכן גירסה\n            ,\n            title: \"title\",\n            text: \"text\",\n            html: \"<h1 style=\\\"color:red;\\\">innerHTML</h1>\",\n            type: \"warning\" //\"warning\",\"info\",\"question\"////,\"error\",\"success\"\n            ,\n            showCancelButton: true,\n            showConfirmButton: true,\n            showFooterRemindMeLater: true,\n            textFooterRemindMeLater: \"\",\n            confirmButtonText: \"confirmButtonText\",\n            linkOnClickConfirmButtom: \"https://www.eol.co.il/\",\n            cancelButtonText: \"confirmButtonText\",\n            confirmButtonColor: \"blue\" //default=#31b1ca\n            ,\n            cancelButtonColor: \"#aaa\" //default=\"#aaa\"\n            //, padding: \"\"\n            // , background: \"\"\n\n          }\n        });\n        this.runSwal(); // $.ajax({\n        //     url: \"https://api.eol.co.il/radio/v1/...\",\n        //     type: 'GET',\n        //     dataType: \"json\",\n        //     contentType: 'application/json; charset = utf-8',\n        //     success: function (result) {\n        //         this.setState({\n        //             result: result\n        //         });\n        //         this.runSwal();\n        //     },\n        //     error: function (req, status) {//\n        //         //    alert(\"error ajax\"+ req+status)\n        //         console.log(req, status);\n        //         if (fthis.state.isActive)\n        //             fthis.setState({\n        //                 isLoaded: true,\n        //                 error: true\n        //             });\n        //     }\n        // });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return Swel;\n}(React.Component); //  {//אף שדה הוא לא שדה חובה (לכולם יש ברירת מחדל)\n//     important: false//קובע אם המשתמש יוכל לדלג ולהמשך או באפליקציה או שיהיה חייב לעדכן גירסה\n//     , title: \"title\"\n//     , text: \"text\"\n//     , html: `<h1 style=\"color:red;\">innerHTML</h1>`\n//     , type: \"warning\"//\"warning\",\"info\",\"question\"////,\"error\",\"success\"\n//     , showCancelButton: true\n//     , showConfirmButton: true\n//     , showFooterRemindMeLater: true\n//,textFooterRemindMeLater:\"\"\n//     , confirmButtonText: \"confirmButtonText\"\n//     , linkOnClickConfirmButtom: \"https://www.eol.co.il/\"\n//     , cancelButtonText: \"confirmButtonText\"\n//     , confirmButtonColor: \"blue\"//default=#31b1ca\n//     , cancelButtonColor: \"#aaa\"//default=\"#aaa\"\n//     //, padding: \"\"\n//     // , background: \"\"\n// }\n\n\nexport { Swel as default };","map":{"version":3,"sources":["C:\\Users\\or\\Desktop\\maot_hahahim\\code\\src\\alertNotifiction.js"],"names":["React","$","Swal","withReactContent","Swel","props","name","myApp","new_myChildrens","state","myChildrens","setState","whenCloseApp","MySwal","fthis","result","fire","html","title","text","type","showCancelButton","showConfirmButton","showCloseButton","confirmButtonText","cancelButtonText","confirmButtonColor","undefined","cancelButtonColor","footer","showFooterRemindMeLater","showSwalLater","clickCancel","textFooterRemindMeLater","padding","background","show","showSwal","onOpen","then","click","dismiss","window","open","linkOnClickConfirmButtom","navigator","app","exitApp","important","runSwal","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport $ from 'jquery';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\n\r\nexport default class Swel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.name = \"swal\";\r\n        this.myApp = this.props.myApp;\r\n\r\n        let new_myChildrens = this.myApp.state.myChildrens;\r\n        new_myChildrens[\"swal\"] = this;\r\n        this.myApp.setState({\r\n            myChildrens: new_myChildrens\r\n        });\r\n\r\n\r\n        this.state = {\r\n            //showSwal: true,\r\n            whenCloseApp: false,\r\n        }\r\n        this.MySwal = withReactContent(Swal);\r\n\r\n    }\r\n    runSwal(whenCloseApp) {\r\n        //  this.setState({whenCloseApp:!whenCloseApp})\r\n        const fthis = this;\r\n        const result = this.state.result;\r\n        this.MySwal.fire({\r\n            html: result.html\r\n            , title: result.title\r\n            , text: result.text\r\n            , type: result.type\r\n            , showCancelButton: result.showCancelButton && !whenCloseApp\r\n            , showConfirmButton: result.showConfirmButton\r\n            , showCloseButton: result.showCloseButton\r\n            , confirmButtonText: result.confirmButtonText\r\n            , cancelButtonText: result.cancelButtonText\r\n            , confirmButtonColor: result.confirmButtonColor !== undefined ? result.confirmButtonColor : '#31b1ca'\r\n            , cancelButtonColor: result.cancelButtonColor !== undefined ? result.cancelButtonColor : '#aaa'\r\n            , footer:\r\n                !whenCloseApp && result.showFooterRemindMeLater\r\n                    ? <div onClick={() => { fthis.myApp.setState({ showSwalLater: true }); this.MySwal.clickCancel() }}>\r\n                        {result.textFooterRemindMeLater !== undefined ? result.textFooterRemindMeLater : 'הזכר לי מאוחר יותר'}</div>\r\n                    : ``\r\n            , padding: result.padding\r\n            , background: result.background\r\n            , show: this.state.showSwal\r\n            //, footer: 'Copyright 2018'\r\n            , onOpen: () => {\r\n                // `MySwal` is a subclass of `Swal`\r\n                //   with all the same instance & static methods\r\n                // MySwal.clickConfirm()\r\n            }\r\n        }).then((click) => {\r\n            if (click.dismiss !== \"cancel\") {\r\n                window.open(result.linkOnClickConfirmButtom);\r\n            }\r\n            if (whenCloseApp) {\r\n                window.navigator.app.exitApp();\r\n            }\r\n            if (result.important) return fthis.runSwal();\r\n        });\r\n    }\r\n    componentWillMount() {\r\n        const fthis = this;\r\n        if (true) {\r\n            this.setState({\r\n                result:\r\n                {//אף שדה הוא לא שדה חובה (לכולם יש ברירת מחדל)\r\n                    important: false//קובע אם המשתמש יוכל לדלג ולהמשך או באפליקציה או שיהיה חייב לעדכן גירסה\r\n                    , title: \"title\"\r\n                    , text: \"text\"\r\n                    , html: `<h1 style=\"color:red;\">innerHTML</h1>`\r\n                    , type: \"warning\"//\"warning\",\"info\",\"question\"////,\"error\",\"success\"\r\n                    , showCancelButton: true\r\n                    , showConfirmButton: true\r\n                    , showFooterRemindMeLater: true\r\n                    , textFooterRemindMeLater: \"\"\r\n                    , confirmButtonText: \"confirmButtonText\"\r\n                    , linkOnClickConfirmButtom: \"https://www.eol.co.il/\"\r\n                    , cancelButtonText: \"confirmButtonText\"\r\n                    , confirmButtonColor: \"blue\"//default=#31b1ca\r\n                    , cancelButtonColor: \"#aaa\"//default=\"#aaa\"\r\n                    //, padding: \"\"\r\n                    // , background: \"\"\r\n                }\r\n\r\n            });\r\n            this.runSwal();\r\n            // $.ajax({\r\n            //     url: \"https://api.eol.co.il/radio/v1/...\",\r\n            //     type: 'GET',\r\n            //     dataType: \"json\",\r\n            //     contentType: 'application/json; charset = utf-8',\r\n            //     success: function (result) {\r\n            //         this.setState({\r\n            //             result: result\r\n            //         });\r\n            //         this.runSwal();\r\n            //     },\r\n            //     error: function (req, status) {//\r\n            //         //    alert(\"error ajax\"+ req+status)\r\n            //         console.log(req, status);\r\n            //         if (fthis.state.isActive)\r\n            //             fthis.setState({\r\n            //                 isLoaded: true,\r\n            //                 error: true\r\n            //             });\r\n            //     }\r\n            // });\r\n\r\n        }\r\n    }\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\n\r\n//  {//אף שדה הוא לא שדה חובה (לכולם יש ברירת מחדל)\r\n//     important: false//קובע אם המשתמש יוכל לדלג ולהמשך או באפליקציה או שיהיה חייב לעדכן גירסה\r\n//     , title: \"title\"\r\n//     , text: \"text\"\r\n//     , html: `<h1 style=\"color:red;\">innerHTML</h1>`\r\n//     , type: \"warning\"//\"warning\",\"info\",\"question\"////,\"error\",\"success\"\r\n//     , showCancelButton: true\r\n//     , showConfirmButton: true\r\n//     , showFooterRemindMeLater: true\r\n//,textFooterRemindMeLater:\"\"\r\n//     , confirmButtonText: \"confirmButtonText\"\r\n//     , linkOnClickConfirmButtom: \"https://www.eol.co.il/\"\r\n//     , cancelButtonText: \"confirmButtonText\"\r\n//     , confirmButtonColor: \"blue\"//default=#31b1ca\r\n//     , cancelButtonColor: \"#aaa\"//default=\"#aaa\"\r\n//     //, padding: \"\"\r\n//     // , background: \"\"\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}